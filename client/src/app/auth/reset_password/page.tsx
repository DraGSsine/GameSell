"use client";
import Link from "next/link";
import { FormEvent, useEffect, useState } from "react";
import { EmailSentIcon } from "../../../../public/icons/Icons";
import axios from "axios";
import { toast } from "react-toastify";


// export const metadata = {
//     title: "GameSell|Reset Password",
//     description: "Generated by create next app",
// };

const ResetPassword = () => {
    const [emailSent, setEmailSent] = useState(false)
    const [email, setEmail] = useState<string>()
    const [canResend, setCanResend] = useState(true);
    const [timeLeft, setTimeLeft] = useState(30); // 30 seconds

    
    useEffect(() => {
        let countdownInterval: NodeJS.Timeout | undefined;

        if (!canResend) {
            countdownInterval = setInterval(() => {
                setTimeLeft((prevTime) => prevTime - 1);
            }, 1000);
        }

        if (timeLeft === 0) {
            clearInterval(countdownInterval);
            setCanResend(true);
        }

        return () => {
            clearInterval(countdownInterval);
        };
    }, [canResend, timeLeft]);

    const handleResendClick = async () => {
        setCanResend(false);
        setTimeLeft(30);
        try {
            HanddleSendCode()
        } catch (error) {
            // Handle the error
            toast.error('Something went wrong')
            console.error(error);
        }
    };

    const HanddleSendCode = async () => {
        try {
            const {data} = await axios.post(`${process.env.NEXT_PUBLIC_API_URL}verification/reset_password`, { email })
            toast.success(data.message)
            setEmailSent(true)

        } catch (error : any) {
            console.log(error)
            toast.error(error?.response?.data?.error?.details[0]?.message)
            console.log(error)
        }        
    };
    return (
        <div className="h-[100vh] flex justify-center items-center">
            <div className="w-full">
                <div className="relative flex flex-col justify-center mx-auto max-w-[525px] overflow-hidden h-screen sm:h-[80vh] rounded-lg bg-white md:py-16 px-10 sm:px-12 md:px-[60px]">
                    {
                        !emailSent
                            ?
                            <div>
                                <h1 className=" text-4xl mb-4 text-[#232836] font-semibold">Reset Password</h1>
                                <p className=" mb-10 text-sm text-[#8992a1] md:text-base">Enter the email associated with your account and we'll send an email with instruction to reset your password.</p>
                                <div>
                                    <div className="mb-6 mt-2">
                                        <input
                                            onChange={(e) => setEmail(e.target.value)}
                                            type="email"
                                            placeholder="Email"
                                            className="bordder-[#E9EDF4] w-full rounded-md border bg-[#FCFDFE] py-3 px-5 text-base text-body-color placeholder-[#8992a1] outline-none focus:border-primary focus-visible:shadow-none"
                                        />
                                    </div>
                                    <button onClick={() => HanddleSendCode()} className=" bordder-primary w-full cursor-pointer rounded-md border bg-primary-color  py-3 px-5 text-base text-white font-medium mr-2 text-center">
                                        Send instructions</button>
                                </div>
                                <p className="mt-6 text-center text-[#8992a1] text-[16px]">
                                Never mind! 
                                    <Link href="/auth/login">
                                        <span className=" cursor-pointer ml-2 tracking-tighter text-primary-color hover:underline">
                                        Take me back to login
                                        </span>
                                    </Link>
                                </p>
                            </div>
                            :
                            <div className=" text-center">
                                <h1 className=" text-[#232836] capitalize font-semibold text-4xl">Check your email</h1>
                                <div className=" flex justify-center my-10">
                                    <EmailSentIcon width={292} />
                                </div>
                                <p className=" mb-5 text-[#7c7b7b]">Check your wayimin671@viperace.com inbox for instructions from us on how to reset your password.</p>

                                <div className="mt-4">
                                {canResend ? (
                                <span className="text-[#232836] ">
                                    Didn't receive the code?{" "}
                                    <strong
                                        onClick={handleResendClick}
                                        className="text-primary-color cursor-pointer"
                                    >
                                        Resend
                                    </strong>
                                </span>
                            ) : (
                                <span className="text-zinc-600">
                                    Please wait... 
                                    <span
                                    className="text-primary-color cursor-pointer"
                                    >
                                    {timeLeft} seconds
                                    </span>
                                </span>
                            )}
                                </div>

                            </div>
                    }
                </div>
            </div>
        </div>
    );
};
export default ResetPassword;
