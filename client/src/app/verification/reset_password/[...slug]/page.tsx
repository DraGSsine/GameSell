"use client";
import Link from "next/link";
import { FormEvent, useState } from "react";
import {
  DoneMarkIcon,
  ResetPasswordIcon,
} from "../../../../../public/icons/Icons";
import axios from "axios";
import { resetPasswordValidation } from "@/util/formValidation";
import { FormValidationErrorParams, FormValidationParams } from "@/types/types";
import InvalidLink from "@/components/verification/InvalidLink";

export const metadata = {
  title: "GameSell|Reset Password",
  description: "Generated by create next app",
};

const ResetPassword = ({ params }: any) => {
  const [userId, token] = params.slug;
  const [emailSent, setEmailSent] = useState(false);
  const [email, setEmail] = useState<string>("");
  const [password, setPassword] = useState<string>("");
  const [confirmePassword, setConfirmePassword] = useState<string>("");
  const [error, setError] = useState<FormValidationErrorParams>();
  const [isValidLink, setIsValidLink] = useState<Boolean>(true);
  const HanddleSendCode = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const isPassowrdsValid = resetPasswordValidation({
      password,
      confirmePassword,
    });
    if (Object.keys(isPassowrdsValid).length !== 0)
      return setError(isPassowrdsValid);
    try {
      const { data } = await axios.post(
        `${process.env.NEXT_PUBLIC_API_URL}verification/reset_password/${userId}/${token}`,
        { password }
      );
      setEmailSent(true);
    } catch (error) {
      console.log("====>", error);
      setIsValidLink(false);
    }
  };
  return (
    <div className="h-[100vh] flex justify-center items-center">
      <div className="w-full">
        {isValidLink ? (
          <div className="relative flex flex-col justify-center mx-auto max-w-[525px] overflow-hidden h-screen sm:h-[80vh] rounded-lg bg-white md:py-16 px-10 sm:px-12 md:px-[60px]">
            {emailSent ? (
              <div className=" flex flex-col">
                <h1 className=" text-4xl mb-2 text-[#232836] font-semibold">
                  Reset Password
                </h1>
                <p
                  className="my-6 text-[#8992a1] text-[16px]"
                >
                  Enter your new password. After confirming, you will be asked to log in again.
                </p>
                {/* <ResetPasswordIcon width={235} height={200} /> */}
                <form onSubmit={(e) => HanddleSendCode(e)}>
                  <div className="mb-6 mt-2">
                    <input
                      onChange={(e) => setPassword(e.target.value)}
                      type="password"
                      placeholder="password"
                      className=" bordder-[#E9EDF4] w-full rounded-md border bg-[#FCFDFE] py-3 px-5 text-base text-body-color placeholder-[#8992a1] outline-none focus:border-primary focus-visible:shadow-none"
                    />
                    <span className=" text-left text-red-500 text-sm">
                      {error?.passwordMessage}
                    </span>{" "}
                    <input
                      onChange={(e) => setConfirmePassword(e.target.value)}
                      type="password"
                      placeholder="confirme password"
                      className="bordder-[#E9EDF4] mt-3 w-full rounded-md border bg-[#FCFDFE] py-3 px-5 text-base text-body-color placeholder-[#8992a1] outline-none focus:border-primary focus-visible:shadow-none"
                    />
                    <span className=" text-left text-red-500 text-sm">
                      {error?.confirmePasswordMessage}
                    </span>{" "}
                  </div>
                  <button className=" bordder-primary w-full cursor-pointer rounded-md border bg-primary-color  py-3 px-5 text-base text-white font-medium mr-2 text-center">
                    Reset Password
                  </button>
                </form>
                <p className="mt-6 text-center text-[#8992a1] text-[16px]">
                  Never mind!
                  <Link href="/auth/login">
                    <span className=" cursor-pointer ml-2 tracking-tighter text-primary-color hover:underline">
                      Take me back to login
                    </span>
                  </Link>
                </p>
              </div>
            ) : (
              <div className="text-center">
                <div className="flex justify-center mb-5">
                  <DoneMarkIcon width={150} height={150} />
                </div>
                <h1 className="text-[#232836] capitalize font-semibold text-[2rem] md:text-[2.5rem]">
                  Password Updated!
                </h1>
                <p className="mb-5 text-[#8992a1] text-lg">
                  Your password has been successfully updated.
                </p>
                <Link
                  href="/auth/login"
                  className="mt-6 inline-block w-48 md:w-96 rounded bg-primary-color px-5 py-3 font-medium text-white shadow-md shadow-primary-color/20 hover:bg-primary-hard-color duration-200 transition-all"
                >
                  Sign In â†’
                </Link>
              </div>
            )}
          </div>
        ) : (
          <InvalidLink />
        )}
      </div>
    </div>
  );
};
export default ResetPassword;
